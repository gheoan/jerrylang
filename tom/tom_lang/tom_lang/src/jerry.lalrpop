use crate::untyped_ast::*;

grammar;

pub Item: Item = {
    <func:Function> => Item::Function(func)
}

Function: Function = {
    <loc_start:@L> "fn" <name:Ident> "(" <args:Comma<Arg>> ")" "{" "}" <loc_end:@L> => {
        Function { loc: Location::new(loc_start, loc_end), name, args }
    }
}

Comma<T>: Vec<T> = {
    <mut v:(<T> ",")*> <e:T?> => match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

Arg: (String, String) = {
    <name:Ident> ":" <ty:Ident> => {
        (name, ty)
    }
}

Ident: String = <s:r"[a-zA-Z_][a-zA-Z0-9_]*"> => s.to_string();
